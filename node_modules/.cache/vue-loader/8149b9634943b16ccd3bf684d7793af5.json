{"remainingRequest":"/Users/news/Desktop/topics_warm/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/news/Desktop/topics_warm/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/news/Desktop/topics_warm/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/news/Desktop/topics_warm/src/components/Header.vue?vue&type=template&id=61dd7a3d&scoped=true&","dependencies":[{"path":"/Users/news/Desktop/topics_warm/src/components/Header.vue","mtime":1654753610077},{"path":"/Users/news/Desktop/topics_warm/node_modules/cache-loader/dist/cjs.js","mtime":1644917916000},{"path":"/Users/news/Desktop/topics_warm/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1644917918000},{"path":"/Users/news/Desktop/topics_warm/node_modules/cache-loader/dist/cjs.js","mtime":1644917916000},{"path":"/Users/news/Desktop/topics_warm/node_modules/vue-loader/lib/index.js","mtime":1644917917000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxheW91dF9oZWFkZXIiIH0sIFsKICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicHJvZ3Jlc3MiIH0pLAogICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb250YWluZXIgbGF5b3V0X2dyaWQiIH0sIFsKICAgICAgX2MoCiAgICAgICAgImRpdiIsCiAgICAgICAgeyBzdGF0aWNDbGFzczogInNsaWRlIiB9LAogICAgICAgIFsKICAgICAgICAgIF9jKCJTbGlkZSIsIFsKICAgICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICJodHRwczovL3d3dy5mdHZuZXdzLmNvbS50dy8iIH0gfSwgWwogICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImxvZ28iLAogICAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCIuLi9hc3NldHMvTE9HTy0wMS5wbmciKSwgYWx0OiAiIiB9LAogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJzdWIiIH0sIFsKICAgICAgICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogIiNwb3AiIH0gfSwgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ0aXRsZWljb24iLAogICAgICAgICAgICAgICAgICBhdHRyczogeyBzcmM6IHJlcXVpcmUoIi4uL2Fzc2V0cy90aXRsZS5wbmciKSwgYWx0OiAiIiB9LAogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICBfdm0uX3YoIueGsemWgOeyvumBuCIpLAogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiI3BldCIgfSB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInRpdGxlaWNvbiIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiLi4vYXNzZXRzL3RpdGxlMS5wbmciKSwgYWx0OiAiIiB9LAogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICBfdm0uX3YoIueZgueZkuavm+WtqSIpLAogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiI2NvdmlkIiB9IH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAidGl0bGVpY29uIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCIuLi9hc3NldHMvdGl0bGUyLnBuZyIpLCBhbHQ6ICIiIH0sCiAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIF92bS5fdigi6b2K5b+D5oqX55arIiksCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICIjd2FybSIgfSB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInRpdGxlaWNvbiIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiLi4vYXNzZXRzL3RpdGxlMy5wbmciKSwgYWx0OiAiIiB9LAogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICBfdm0uX3YoIuaaluW/g+aVheS6iyIpLAogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiI3Blb3BsZSIgfSB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInRpdGxlaWNvbiIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiLi4vYXNzZXRzL3RpdGxlNC5wbmciKSwgYWx0OiAiIiB9LAogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICBfdm0uX3YoIuWLteW/l+S6uueJqSIpLAogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiI3dvcmxkIiB9IH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAidGl0bGVpY29uIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCIuLi9hc3NldHMvdGl0bGU1LnBuZyIpLCBhbHQ6ICIiIH0sCiAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIF92bS5fdigi5ZyL6Zqb5pqW6IGeIiksCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICIjZ29vZCIgfSB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInRpdGxlaWNvbiIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiLi4vYXNzZXRzL3RpdGxlNi5wbmciKSwgYWx0OiAiIiB9LAogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICBfdm0uX3YoIuWFrOebiumAgeaaliIpLAogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiI3ZpZGVvIiB9IH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAidGl0bGVpY29uIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCIuLi9hc3NldHMvdGl0bGU3LnBuZyIpLCBhbHQ6ICIiIH0sCiAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIF92bS5fdigi57K+6YG45b2x6Z+zIiksCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgXSksCiAgICAgICAgXSwKICAgICAgICAxCiAgICAgICksCiAgICBdKSwKICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiaWNvbiIgfSwgWwogICAgICBfdm0uX20oMCksCiAgICAgIF9jKCJiciIpLAogICAgICBfdm0uX20oMSksCiAgICAgIF9jKCJiciIpLAogICAgICBfYygKICAgICAgICAiYSIsCiAgICAgICAgewogICAgICAgICAgc3RhdGljQ2xhc3M6ICJmYi14ZmJtbC1wYXJzZS1pZ25vcmUiLAogICAgICAgICAgYXR0cnM6IHsgdGFyZ2V0OiAiX2JsYW5rIiB9LAogICAgICAgICAgb246IHsgY2xpY2s6IF92bS5nZXRMb2NhbFVybCB9LAogICAgICAgIH0sCiAgICAgICAgWwogICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICBzcmM6IHJlcXVpcmUoIi4uL2Fzc2V0cy9zaGFyZS5wbmciKSwKICAgICAgICAgICAgICBhbHQ6ICIiLAogICAgICAgICAgICAgIHdpZHRoOiAiNjBweCIsCiAgICAgICAgICAgIH0sCiAgICAgICAgICB9KSwKICAgICAgICBdCiAgICAgICksCiAgICAgIF9jKCJiciIpLAogICAgXSksCiAgXSkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gWwogIGZ1bmN0aW9uICgpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKAogICAgICAiYSIsCiAgICAgIHsKICAgICAgICBhdHRyczogewogICAgICAgICAgaHJlZjogImh0dHBzOi8vc29jaWFsLXBsdWdpbnMubGluZS5tZS9saW5laXQvc2hhcmU/dXJsPWh0dHBzOi8vd3d3LmZ0dm5ld3MuY29tLnR3L3RvcGljcy9zb2xkaWVyLyIsCiAgICAgICAgICB0YXJnZXQ6ICJfYmxhbmsiLAogICAgICAgIH0sCiAgICAgIH0sCiAgICAgIFsKICAgICAgICBfYygKICAgICAgICAgICJzcGFuIiwKICAgICAgICAgIHsKICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICBpZDogInNvY2lhbF9saW5lIiwKICAgICAgICAgICAgICAiZGF0YS1ocmVmIjogImh0dHBzOi8vd3d3LmZ0dm5ld3MuY29tLnR3L3RvcGljcy9zb2xkaWVyLyIsCiAgICAgICAgICAgIH0sCiAgICAgICAgICB9LAogICAgICAgICAgWwogICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICBzcmM6IHJlcXVpcmUoIi4uL2Fzc2V0cy9MSU5FLnBuZyIpLAogICAgICAgICAgICAgICAgYWx0OiAiIiwKICAgICAgICAgICAgICAgIHdpZHRoOiAiNjBweCIsCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfSksCiAgICAgICAgICBdCiAgICAgICAgKSwKICAgICAgXQogICAgKQogIH0sCiAgZnVuY3Rpb24gKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoCiAgICAgICJhIiwKICAgICAgewogICAgICAgIHN0YXRpY0NsYXNzOiAiZmIteGZibWwtcGFyc2UtaWdub3JlIiwKICAgICAgICBhdHRyczogewogICAgICAgICAgdGFyZ2V0OiAiX2JsYW5rIiwKICAgICAgICAgIGhyZWY6ICJodHRwczovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyL3NoYXJlci5waHA/dT1odHRwcyUzQSUyRiUyRnd3dy5mdHZuZXdzLmNvbS50dyUyRnRvcGljcyUyRnNvbGRpZXIlMkYmc3JjPXNka3ByZXBhcnNlIiwKICAgICAgICB9LAogICAgICB9LAogICAgICBbCiAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgIHNyYzogcmVxdWlyZSgiLi4vYXNzZXRzL0ZhY2Vib29rLnBuZyIpLAogICAgICAgICAgICBhbHQ6ICIiLAogICAgICAgICAgICB3aWR0aDogIjYwcHgiLAogICAgICAgICAgfSwKICAgICAgICB9KSwKICAgICAgXQogICAgKQogIH0sCl0KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}