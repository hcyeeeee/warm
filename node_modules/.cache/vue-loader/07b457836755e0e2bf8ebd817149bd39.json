{"remainingRequest":"/Users/news/Desktop/source 2/topic_warm/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/news/Desktop/source 2/topic_warm/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/news/Desktop/source 2/topic_warm/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/news/Desktop/source 2/topic_warm/src/components/Banner.vue?vue&type=template&id=a2fea148&scoped=true&class=container&","dependencies":[{"path":"/Users/news/Desktop/source 2/topic_warm/src/components/Banner.vue","mtime":1656300977742},{"path":"/Users/news/Desktop/source 2/topic_warm/node_modules/cache-loader/dist/cjs.js","mtime":1656300595427},{"path":"/Users/news/Desktop/source 2/topic_warm/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1656300599469},{"path":"/Users/news/Desktop/source 2/topic_warm/node_modules/cache-loader/dist/cjs.js","mtime":1656300595427},{"path":"/Users/news/Desktop/source 2/topic_warm/node_modules/vue-loader/lib/index.js","mtime":1656300599468}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}