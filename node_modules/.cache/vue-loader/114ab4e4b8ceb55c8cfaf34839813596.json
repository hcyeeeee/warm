{"remainingRequest":"/Users/news/Desktop/source 2/topic_warm/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/news/Desktop/source 2/topic_warm/src/components/Header.vue?vue&type=template&id=61dd7a3d&","dependencies":[{"path":"/Users/news/Desktop/source 2/topic_warm/src/components/Header.vue","mtime":1655348508525},{"path":"/Users/news/Desktop/source 2/topic_warm/node_modules/cache-loader/dist/cjs.js","mtime":1644917916000},{"path":"/Users/news/Desktop/source 2/topic_warm/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1644917918000},{"path":"/Users/news/Desktop/source 2/topic_warm/node_modules/cache-loader/dist/cjs.js","mtime":1644917916000},{"path":"/Users/news/Desktop/source 2/topic_warm/node_modules/vue-loader/lib/index.js","mtime":1644917917000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}