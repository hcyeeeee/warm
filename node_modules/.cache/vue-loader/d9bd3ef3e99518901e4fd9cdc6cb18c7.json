{"remainingRequest":"/Users/news/Desktop/source 2/topic_warm/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/news/Desktop/source 2/topic_warm/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/news/Desktop/source 2/topic_warm/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/news/Desktop/source 2/topic_warm/src/components/Header.vue?vue&type=template&id=61dd7a3d&scoped=true&","dependencies":[{"path":"/Users/news/Desktop/source 2/topic_warm/src/components/Header.vue","mtime":1655434700840},{"path":"/Users/news/Desktop/source 2/topic_warm/node_modules/cache-loader/dist/cjs.js","mtime":1644917916000},{"path":"/Users/news/Desktop/source 2/topic_warm/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1644917918000},{"path":"/Users/news/Desktop/source 2/topic_warm/node_modules/cache-loader/dist/cjs.js","mtime":1644917916000},{"path":"/Users/news/Desktop/source 2/topic_warm/node_modules/vue-loader/lib/index.js","mtime":1644917917000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxheW91dF9oZWFkZXIiIH0sIFsKICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicHJvZ3Jlc3MiIH0pLAogICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb250YWluZXIgbGF5b3V0X2dyaWQiIH0sIFsKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJzbGlkZSIsIGNsYXNzOiB7IGZpeGVkOiBfdm0uYWN0aXZlIH0gfSwgWwogICAgICAgIF92bS5fbSgwKSwKICAgICAgICBfdm0uX20oMSksCiAgICAgIF0pLAogICAgXSksCiAgICBfYygiZGl2IiwgeyBjbGFzczogeyBmaXhlZDogX3ZtLmFjdGl2ZSB9LCBhdHRyczogeyBpZDogImljb24iIH0gfSwgWwogICAgICBfdm0uX20oMiksCiAgICAgIF9jKCJiciIpLAogICAgICBfdm0uX20oMyksCiAgICAgIF9jKCJiciIpLAogICAgICBfYygKICAgICAgICAiYSIsCiAgICAgICAgewogICAgICAgICAgc3RhdGljQ2xhc3M6ICJmYi14ZmJtbC1wYXJzZS1pZ25vcmUiLAogICAgICAgICAgYXR0cnM6IHsgdGFyZ2V0OiAiX2JsYW5rIiB9LAogICAgICAgICAgb246IHsgY2xpY2s6IF92bS5nZXRMb2NhbFVybCB9LAogICAgICAgIH0sCiAgICAgICAgWwogICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICBzcmM6IHJlcXVpcmUoIi4uL2Fzc2V0cy9zaGFyZS5wbmciKSwKICAgICAgICAgICAgICBhbHQ6ICIiLAogICAgICAgICAgICAgIHdpZHRoOiAiNjBweCIsCiAgICAgICAgICAgIH0sCiAgICAgICAgICB9KSwKICAgICAgICBdCiAgICAgICksCiAgICAgIF9jKCJiciIpLAogICAgXSksCiAgXSkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gWwogIGZ1bmN0aW9uICgpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJuYXYiLCB7IGF0dHJzOiB7IGlkOiAibmF2YmFyQnRuIiB9IH0sIFsKICAgICAgX2MoImkiLCB7IHN0YXRpY0NsYXNzOiAiZmFzIGZhLWJhcnMgZmEtMngiLCBhdHRyczogeyBpZDogInN3aXRjaGVyIiB9IH0pLAogICAgXSkKICB9LAogIGZ1bmN0aW9uICgpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJuYXYiLCB7IHN0YXRpY0NsYXNzOiAibmF2YmFyIiwgYXR0cnM6IHsgaWQ6ICJuYXZiYXIiIH0gfSwgWwogICAgICBfYygibmF2IiwgeyBzdGF0aWNDbGFzczogIm5hdiBuYXYtcGlsbHMgZmxleC1jb2x1bW4iIH0sIFsKICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAgICAgIm1hcmdpbi10b3AiOiAiLTEwMHB4IiwKICAgICAgICAgICAgIm1hcmdpbi1ib3R0b20iOiAiLTIwcHgiLAogICAgICAgICAgICB3aWR0aDogIjIwMHB4IiwKICAgICAgICAgIH0sCiAgICAgICAgICBhdHRyczogeyBzcmM6IHJlcXVpcmUoIi4uL2Fzc2V0cy9MT0dPLTAxLnBuZyIpLCBhbHQ6ICIiIH0sCiAgICAgICAgfSksCiAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAibmF2LWxpbmsiLCBhdHRyczogeyBocmVmOiAiI3BvcCIgfSB9LCBbCiAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICBhdHRyczogeyBzcmM6IHJlcXVpcmUoIi4uL2Fzc2V0cy90aXRsZS5wbmciKSwgYWx0OiAiIiB9LAogICAgICAgICAgfSksCiAgICAgICAgICBfdm0uX3YoIueGsemWgOeyvumBuCIpLAogICAgICAgIF0pLAogICAgICAgIF9jKCJhIiwgeyBzdGF0aWNDbGFzczogIm5hdi1saW5rIiwgYXR0cnM6IHsgaHJlZjogIiNwZXQiIH0gfSwgWwogICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCIuLi9hc3NldHMvdGl0bGUxLnBuZyIpLCBhbHQ6ICIiIH0sCiAgICAgICAgICB9KSwKICAgICAgICAgIF92bS5fdigi55mC55mS5q+b5a2pIiksCiAgICAgICAgXSksCiAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAibmF2LWxpbmsiLCBhdHRyczogeyBocmVmOiAiI2NvdmlkIiB9IH0sIFsKICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiLi4vYXNzZXRzL3RpdGxlMi5wbmciKSwgYWx0OiAiIiB9LAogICAgICAgICAgfSksCiAgICAgICAgICBfdm0uX3YoIum9iuW/g+aKl+eWqyIpLAogICAgICAgIF0pLAogICAgICAgIF9jKCJhIiwgeyBzdGF0aWNDbGFzczogIm5hdi1saW5rIiwgYXR0cnM6IHsgaHJlZjogIiN3YXJtIiB9IH0sIFsKICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiLi4vYXNzZXRzL3RpdGxlMy5wbmciKSwgYWx0OiAiIiB9LAogICAgICAgICAgfSksCiAgICAgICAgICBfdm0uX3YoIuaaluW/g+aVheS6iyIpLAogICAgICAgIF0pLAogICAgICAgIF9jKCJhIiwgeyBzdGF0aWNDbGFzczogIm5hdi1saW5rIiwgYXR0cnM6IHsgaHJlZjogIiNwZW9wbGUiIH0gfSwgWwogICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCIuLi9hc3NldHMvdGl0bGU0LnBuZyIpLCBhbHQ6ICIiIH0sCiAgICAgICAgICB9KSwKICAgICAgICAgIF92bS5fdigi5Yu15b+X5Lq654mpIiksCiAgICAgICAgXSksCiAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAibmF2LWxpbmsiLCBhdHRyczogeyBocmVmOiAiI3dvcmxkIiB9IH0sIFsKICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiLi4vYXNzZXRzL3RpdGxlNS5wbmciKSwgYWx0OiAiIiB9LAogICAgICAgICAgfSksCiAgICAgICAgICBfdm0uX3YoIuWci+mam+aaluiBniIpLAogICAgICAgIF0pLAogICAgICAgIF9jKCJhIiwgeyBzdGF0aWNDbGFzczogIm5hdi1saW5rIiwgYXR0cnM6IHsgaHJlZjogIiNnb29kIiB9IH0sIFsKICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiLi4vYXNzZXRzL3RpdGxlNi5wbmciKSwgYWx0OiAiIiB9LAogICAgICAgICAgfSksCiAgICAgICAgICBfdm0uX3YoIuWFrOebiumAgeaaliIpLAogICAgICAgIF0pLAogICAgICAgIF9jKCJhIiwgeyBzdGF0aWNDbGFzczogIm5hdi1saW5rIiwgYXR0cnM6IHsgaHJlZjogIiN2aWRlbyIgfSB9LCBbCiAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICBhdHRyczogeyBzcmM6IHJlcXVpcmUoIi4uL2Fzc2V0cy90aXRsZTcucG5nIiksIGFsdDogIiIgfSwKICAgICAgICAgIH0pLAogICAgICAgICAgX3ZtLl92KCLnsr7pgbjlvbHpn7MiKSwKICAgICAgICBdKSwKICAgICAgXSksCiAgICBdKQogIH0sCiAgZnVuY3Rpb24gKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoCiAgICAgICJhIiwKICAgICAgewogICAgICAgIGF0dHJzOiB7CiAgICAgICAgICBocmVmOiAiaHR0cHM6Ly9zb2NpYWwtcGx1Z2lucy5saW5lLm1lL2xpbmVpdC9zaGFyZT91cmw9aHR0cHM6Ly93d3cuZnR2bmV3cy5jb20udHcvdG9waWNzL3dhcm0vIiwKICAgICAgICAgIHRhcmdldDogIl9ibGFuayIsCiAgICAgICAgfSwKICAgICAgfSwKICAgICAgWwogICAgICAgIF9jKAogICAgICAgICAgInNwYW4iLAogICAgICAgICAgewogICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgIGlkOiAic29jaWFsX2xpbmUiLAogICAgICAgICAgICAgICJkYXRhLWhyZWYiOiAiaHR0cHM6Ly93d3cuZnR2bmV3cy5jb20udHcvdG9waWNzL3dhcm0vIiwKICAgICAgICAgICAgfSwKICAgICAgICAgIH0sCiAgICAgICAgICBbCiAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgIHNyYzogcmVxdWlyZSgiLi4vYXNzZXRzL0xJTkUucG5nIiksCiAgICAgICAgICAgICAgICBhbHQ6ICIiLAogICAgICAgICAgICAgICAgd2lkdGg6ICI2MHB4IiwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9KSwKICAgICAgICAgIF0KICAgICAgICApLAogICAgICBdCiAgICApCiAgfSwKICBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygKICAgICAgImEiLAogICAgICB7CiAgICAgICAgc3RhdGljQ2xhc3M6ICJmYi14ZmJtbC1wYXJzZS1pZ25vcmUiLAogICAgICAgIGF0dHJzOiB7CiAgICAgICAgICB0YXJnZXQ6ICJfYmxhbmsiLAogICAgICAgICAgaHJlZjogImh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9zaGFyZXIvc2hhcmVyLnBocD91PWh0dHBzJTNBJTJGJTJGd3d3LmZ0dm5ld3MuY29tLnR3JTJGdG9waWNzJTJGd2FybSUyRiZzcmM9c2RrcHJlcGFyc2UiLAogICAgICAgIH0sCiAgICAgIH0sCiAgICAgIFsKICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgc3JjOiByZXF1aXJlKCIuLi9hc3NldHMvRmFjZWJvb2sucG5nIiksCiAgICAgICAgICAgIGFsdDogIiIsCiAgICAgICAgICAgIHdpZHRoOiAiNjBweCIsCiAgICAgICAgICB9LAogICAgICAgIH0pLAogICAgICBdCiAgICApCiAgfSwKXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}