{"remainingRequest":"/Users/news/Desktop/topics_warm/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/news/Desktop/topics_warm/src/components/pop_news.vue?vue&type=template&id=0c18a8cc&scoped=true&","dependencies":[{"path":"/Users/news/Desktop/topics_warm/src/components/pop_news.vue","mtime":1654673780552},{"path":"/Users/news/Desktop/topics_warm/node_modules/cache-loader/dist/cjs.js","mtime":1644917916000},{"path":"/Users/news/Desktop/topics_warm/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1644917918000},{"path":"/Users/news/Desktop/topics_warm/node_modules/cache-loader/dist/cjs.js","mtime":1644917916000},{"path":"/Users/news/Desktop/topics_warm/node_modules/vue-loader/lib/index.js","mtime":1644917917000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}