{"remainingRequest":"/Users/peichin/Desktop/topics_warm/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/peichin/Desktop/topics_warm/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/peichin/Desktop/topics_warm/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peichin/Desktop/topics_warm/src/components/covid_news.vue?vue&type=template&id=1761ee3d&scoped=true&","dependencies":[{"path":"/Users/peichin/Desktop/topics_warm/src/components/covid_news.vue","mtime":1654594216689},{"path":"/Users/peichin/Desktop/topics_warm/node_modules/cache-loader/dist/cjs.js","mtime":1644917916000},{"path":"/Users/peichin/Desktop/topics_warm/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1644917918000},{"path":"/Users/peichin/Desktop/topics_warm/node_modules/cache-loader/dist/cjs.js","mtime":1644917916000},{"path":"/Users/peichin/Desktop/topics_warm/node_modules/vue-loader/lib/index.js","mtime":1644917917000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxheW91dCIsIGF0dHJzOiB7IGlkOiAicGV0IiB9IH0sIFsKICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibGF5b3V0IiB9LCBbCiAgICAgIF9jKCJoMiIsIHsgc3RhdGljQ2xhc3M6ICJ0aXRsZV90ZXh0IiB9LCBbCiAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgIHN0YXRpY0NsYXNzOiAidGl0bGVfaWNvbiIsCiAgICAgICAgICBhdHRyczogeyBzcmM6IHJlcXVpcmUoIi4uL2Fzc2V0cy90aXRsZTIucG5nIiksIGFsdDogIiIgfSwKICAgICAgICB9KSwKICAgICAgICBfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS50aXRsZSkpLAogICAgICBdKSwKICAgICAgX2MoCiAgICAgICAgImRpdiIsCiAgICAgICAgeyBzdGF0aWNDbGFzczogImxheW91dF9ncmlkIiB9LAogICAgICAgIF92bS5fbChfdm0ubmV3c0luZm8sIGZ1bmN0aW9uIChuZXdzLCBpbmRleCkgewogICAgICAgICAgcmV0dXJuIF9jKCJkaXYiLCB7IGtleTogaW5kZXgsIHN0YXRpY0NsYXNzOiAibGF5b3V0X2dyaWRfbmV3cyIgfSwgWwogICAgICAgICAgICBpbmRleCA8PSAzCiAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgImEiLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgIGhyZWY6ICJodHRwczovL3d3dy5mdHZuZXdzLmNvbS50dy9uZXdzL2RldGFpbC8iICsgbmV3cy5JRCwKICAgICAgICAgICAgICAgICAgICAgIHRhcmdldDogIl9ibGFuayIsCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZ3JpZF9jb3ZlciIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgX2MoImltZyIsIHsgYXR0cnM6IHsgc3JjOiBuZXdzLkltYWdlIH0gfSksCiAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJncmlkX2luZm8iIH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKCJoNCIsIFtfdm0uX3YoX3ZtLl9zKG5ld3MuVGl0bGUpKV0pLAogICAgICAgICAgICAgICAgICAgICAgX2MoInAiLCBbX3ZtLl92KF92bS5fcyhuZXdzLkNyZWF0ZURhdGUpKV0pLAogICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgIF0pCiAgICAgICAgfSksCiAgICAgICAgMAogICAgICApLAogICAgXSksCiAgICBfYygic3BhbiIsIHsgYXR0cnM6IHsgaWQ6ICJkb3RzIiB9IH0pLAogICAgX2MoInNwYW4iLCB7IGF0dHJzOiB7IGlkOiAibW9yZTIiIH0gfSwgWwogICAgICBfYygKICAgICAgICAiZGl2IiwKICAgICAgICB7IHN0YXRpY0NsYXNzOiAibGF5b3V0Iiwgc3RhdGljU3R5bGU6IHsgIm1hcmdpbi10b3AiOiAiLTE2MHB4IiB9IH0sCiAgICAgICAgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAibGF5b3V0X2dyaWQiIH0sCiAgICAgICAgICAgIF92bS5fbChfdm0ubmV3c0luZm8sIGZ1bmN0aW9uIChuZXdzLCBpbmRleCkgewogICAgICAgICAgICAgIHJldHVybiBfYygKICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgeyBrZXk6IGluZGV4LCBzdGF0aWNDbGFzczogImxheW91dF9ncmlkX25ld3MiIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIGluZGV4ID4gMwogICAgICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiaHR0cHM6Ly93d3cuZnR2bmV3cy5jb20udHcvbmV3cy9kZXRhaWwvIiArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld3MuSUQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ6ICJfYmxhbmsiLAogICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImdyaWRfY292ZXIiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7IGF0dHJzOiB7IHNyYzogbmV3cy5JbWFnZSB9IH0pLAogICAgICAgICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZ3JpZF9pbmZvIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiaDQiLCBbX3ZtLl92KF92bS5fcyhuZXdzLlRpdGxlKSldKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJwIiwgW192bS5fdihfdm0uX3MobmV3cy5DcmVhdGVEYXRlKSldKSwKICAgICAgICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgKQogICAgICAgICAgICB9KSwKICAgICAgICAgICAgMAogICAgICAgICAgKSwKICAgICAgICBdCiAgICAgICksCiAgICBdKSwKICAgIF9jKCJidXR0b24iLCB7IGF0dHJzOiB7IGlkOiAibXlCdG4yIiB9LCBvbjogeyBjbGljazogX3ZtLm15RnVuY3Rpb24gfSB9LCBbCiAgICAgIF92bS5fdigi6Zax6K6AIiksCiAgICAgIF9jKCJiciIpLAogICAgICBfdm0uX3YoIuabtOWkmiIpLAogICAgXSksCiAgXSkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}